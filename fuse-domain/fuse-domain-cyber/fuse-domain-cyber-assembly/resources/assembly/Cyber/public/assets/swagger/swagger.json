{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "YangDb [Cyber-Graph DB] API"
  },
  "basePath": "/fuse",
  "tags": [
    {
      "name": "YangDb",
      "description": "\nEverything about YangDb Graph Engine."
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/xml",
    "image/*",
    "text/csv",
    "application/gzip"

  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "Get API Info",
        "description": "API Info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "API resources urls"
          }
        }
      }
    },
    "/idgen/init": {
      "get": {
        "tags": [
          "management"
        ],
        "summary": "Init DB id Sequencer",
        "description": "Initialize DB id Sequencer tables",
        "parameters": [
          {
            "name": "names",
            "in": "query",
            "description": "Sequence names [Entity,Relation,Evalue,Rvalue,workerId]  ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SequenceNames"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Initiated"
          }
        }
      }
    },

    "/internal/version": {
      "get": {
        "tags": [
          "management"
        ],
        "summary": "Get server version",
        "description": "Server versions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Server version"
          }
        }
      }
    },
    "/internal/config": {
      "get": {
        "tags": [
          "management"
        ],
        "summary": "Get server configurations (according to app.config)",
        "description": "Server configuration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Server configuration"
          }
        }
      }
    },

    "/catalog/ontology": {
      "post": {
        "tags": [
          "catalog"
        ],
        "summary": "add an ontology to catalog",
        "description": "add an ontology to catalog",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "Ontology",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ontology"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      },
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get all Ontology catalog resources",
        "description": "Ontology catalog resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All Ontology "
          }
        }
      }
    },
    "/catalog/ontology/{id}": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get Ontology resource by name ",
        "description": "Ontology resource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ontology Json"
          }
        }
      }
    },
    "/catalog/ontology/{id}/visualize": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Fetch ontology and visualize as SVG graph",
        "description": "Fetch ontology by id and visualize as SVG graph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": "image/*",
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/catalog/schema": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get available schemas",
        "description": "Ontology schema resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Schema Json array"
          }
        }
      }
    },
    "/catalog/schema/{id}": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get schemas by Id",
        "description": "Get Ontology schema resource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Schema Json"
          }
        }
      }
    },

    "/graphql/ontology/{id}": {
      "post": {
        "tags": [
          "catalog"
        ],
        "summary": "graphQL IDL into Ontology",
        "description": "Transform a graphQL IDL into V1 Ontology - see https://graphql.org/learn/schema/" ,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "graphQL IDL  ",
            "required": true,
            "type": "string",
            "default": "type Query{\n    capsules(\n        find: CapsulesFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Capsule]\n    capsulesPast(\n        find: CapsulesFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Capsule]\n    capsulesUpcoming(\n        find: CapsulesFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Capsule]\n    capsule(\n        id: ID!\n    ): Capsule\n    company: Info\n    cores(\n        find: CoresFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Core]\n    coresPast(\n        find: CoresFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Core]\n    coresUpcoming(\n        find: CoresFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Core]\n    core(\n        id: ID!\n    ): Core\n    dragons(\n        limit: Int\n        offset: Int\n    ): [Dragon]\n    dragon(\n        id: ID!\n    ): Dragon\n    histories(\n        find: HistoryFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [History]\n    historiesResult(\n        find: HistoryFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): HistoriesResult\n    history(\n        id: ID!\n    ): History\n    landpads(\n        limit: Int\n        offset: Int\n    ): [Landpad]\n    landpad(\n        id: ID!\n    ): Landpad\n    launches(\n        find: LaunchFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Launch]\n    launchesPast(\n        find: LaunchFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Launch]\n    launchesPastResult(\n        find: LaunchFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): LaunchesPastResult\n    launchesUpcoming(\n        find: LaunchFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Launch]\n    launch(\n        id: ID!\n    ): Launch\n    launchLatest(\n        offset: Int\n    ): Launch\n    launchNext(\n        offset: Int\n    ): Launch\n    launchpads(\n        limit: Int\n        offset: Int\n    ): [Launchpad]\n    launchpad(\n        id: ID!\n    ): Launchpad\n    missions(\n        find: MissionsFind\n        limit: Int\n        offset: Int\n    ): [Mission]\n    missionsResult(\n        find: MissionsFind\n        limit: Int\n        offset: Int\n    ): MissionResult\n    mission(\n        id: ID!\n    ): Mission\n    payloads(\n        find: PayloadsFind\n        limit: Int = null\n        offset: Int\n        order: String\n        sort: String\n    ): [Payload]\n    payload(\n        id: ID!\n    ): Payload\n    roadster: Roadster\n    rockets(\n        limit: Int\n        offset: Int\n    ): [Rocket]\n    rocketsResult(\n        limit: Int\n        offset: Int\n    ): RocketsResult\n    rocket(\n        id: ID!\n    ): Rocket\n    ships(\n        find: ShipsFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): [Ship]\n    shipsResult(\n        find: ShipsFind\n        limit: Int\n        offset: Int\n        order: String\n        sort: String\n    ): ShipsResult\n    ship(\n        id: ID!\n    ): Ship\n}\n\ninput CapsulesFind{\n    id: ID\n    landings: Int\n    mission: String\n    original_launch: String\n    reuse_count: Int\n    status: String\n    type: String\n}\n\ntype Capsule{\n    id: ID\n    landings: Int\n    missions: [CapsuleMission]\n    original_launch: String\n    reuse_count: Int\n    status: String\n    type: String\n    dragon: Dragon\n}\n\ntype CapsuleMission{\n    flight: Int\n    name: String\n}\n\ntype Dragon{\n    active: Boolean\n    crew_capacity: Int\n    description: String\n    diameter: Distance\n    dry_mass_kg: Int\n    dry_mass_lb: Int\n    first_flight: String\n    heat_shield: DragonHeatShield\n    height_w_trunk: Distance\n    id: ID\n    launch_payload_mass: Mass\n    launch_payload_vol: Volume\n    name: String\n    orbit_duration_yr: Int\n    pressurized_capsule: DragonPressurizedCapsule\n    return_payload_mass: Mass\n    return_payload_vol: Volume\n    sidewall_angle_deg: Float\n    thrusters: [DragonThrust]\n    trunk: DragonTrunk\n    type: String\n    wikipedia: String\n}\n\ntype Distance{\n    feet: Float\n    meters: Float\n}\n\ntype DragonHeatShield{\n    dev_partner: String\n    material: String\n    size_meters: Float\n    temp_degrees: Int\n}\n\ntype Mass{\n    kg: Int\n    lb: Int\n}\n\ntype Volume{\n    cubic_feet: Int\n    cubic_meters: Int\n}\n\ntype DragonPressurizedCapsule{\n    payload_volume: Volume\n}\n\ntype DragonThrust{\n    amount: Int\n    fuel_1: String\n    fuel_2: String\n    pods: Int\n    thrust: Force\n    type: String\n}\n\ntype Force{\n    kN: Float\n    lbf: Float\n}\n\ntype DragonTrunk{\n    cargo: DragonTrunkCargo\n    trunk_volume: Volume\n}\n\ntype DragonTrunkCargo{\n    solar_array: Int\n    unpressurized_cargo: Boolean\n}\n\ntype Info{\n    ceo: String\n    coo: String\n    cto_propulsion: String\n    cto: String\n    employees: Int\n    founded: Int\n    founder: String\n    headquarters: Address\n    launch_sites: Int\n    links: InfoLinks\n    name: String\n    summary: String\n    test_sites: Int\n    valuation: Float\n    vehicles: Int\n}\n\ntype Address{\n    address: String\n    city: String\n    state: String\n}\n\ntype InfoLinks{\n    elon_twitter: String\n    flickr: String\n    twitter: String\n    website: String\n}\n\ninput CoresFind{\n    asds_attempts: Int\n    asds_landings: Int\n    block: Int\n    id: String\n    missions: String\n    original_launch: String\n    reuse_count: Int\n    rtls_attempts: Int\n    rtls_landings: Int\n    status: String\n    water_landing: Boolean\n}\n\ntype Core{\n    asds_attempts: Int\n    asds_landings: Int\n    block: Int\n    id: ID\n    missions: [CapsuleMission]\n    original_launch: String\n    reuse_count: Int\n    rtls_attempts: Int\n    rtls_landings: Int\n    status: String\n    water_landing: Boolean\n}\n\ninput HistoryFind{\n    end: String\n    flight_number: Int\n    id: ID\n    start: String\n}\n\ntype History{\n    details: String\n    event_String_unix: String\n    event_String_utc: String\n    id: ID\n    links: Link\n    title: String\n    flight: Launch\n}\n\ntype Link{\n    article: String\n    reddit: String\n    wikipedia: String\n}\n\ntype Launch{\n    details: String\n    id: ID\n    is_tentative: Boolean\n    launch_String_local: String\n    launch_String_unix: String\n    launch_String_utc: String\n    launch_site: LaunchSite\n    launch_success: Boolean\n    launch_year: String\n    links: LaunchLinks\n    mission_id: [String]\n    mission_name: String\n    rocket: LaunchRocket\n    static_fire_String_unix: String\n    static_fire_String_utc: String\n    telemetry: LaunchTelemetry\n    tentative_max_precision: String\n    upcoming: Boolean\n    ships: [Ship]\n}\n\ntype LaunchSite{\n    site_id: String\n    site_name_long: String\n    site_name: String\n}\n\ntype LaunchLinks{\n    article_link: String\n    flickr_images: [String]\n    mission_patch_small: String\n    mission_patch: String\n    presskit: String\n    reddit_campaign: String\n    reddit_launch: String\n    reddit_media: String\n    reddit_recovery: String\n    video_link: String\n    wikipedia: String\n}\n\ntype LaunchRocket{\n    fairings: LaunchRocketFairings\n    first_stage: LaunchRocketFirstStage\n    rocket_name: String\n    rocket_type: String\n    rocket: Rocket\n    second_stage: LaunchRocketSecondStage\n}\n\ntype LaunchRocketFairings{\n    recovered: Boolean\n    recovery_attempt: Boolean\n    reused: Boolean\n    ship: String\n}\n\ntype LaunchRocketFirstStage{\n    cores: [LaunchRocketFirstStageCore]\n}\n\ntype LaunchRocketFirstStageCore{\n    block: Int\n    core: Core\n    flight: Int\n    gridfins: Boolean\n    land_success: Boolean\n    landing_intent: Boolean\n    landing_type: String\n    landing_vehicle: String\n    legs: Boolean\n    reused: Boolean\n}\n\ntype Rocket{\n    active: Boolean\n    boosters: Int\n    company: String\n    cost_per_launch: Int\n    country: String\n    description: String\n    diameter: Distance\n    engines: RocketEngines\n    first_flight: String\n    first_stage: RocketFirstStage\n    height: Distance\n    id: ID\n    landing_legs: RocketLandingLegs\n    mass: Mass\n    name: String\n    payload_weights: [RocketPayloadWeight]\n    second_stage: RocketSecondStage\n    stages: Int\n    success_rate_pct: Int\n    type: String\n    wikipedia: String\n}\n\ntype RocketEngines{\n    number: Int\n    type: String\n    version: String\n    layout: String\n    engine_loss_max: String\n    propellant_1: String\n    propellant_2: String\n    thrust_sea_level: Force\n    thrust_vacuum: Force\n    thrust_to_weight: Float\n}\n\ntype RocketFirstStage{\n    burn_time_sec: Int\n    engines: Int\n    fuel_amount_tons: Float\n    reusable: Boolean\n    thrust_sea_level: Force\n    thrust_vacuum: Force\n}\n\ntype RocketLandingLegs{\n    number: Int\n    material: String\n}\n\ntype RocketPayloadWeight{\n    id: String\n    kg: Int\n    lb: Int\n    name: String\n}\n\ntype RocketSecondStage{\n    burn_time_sec: Int\n    engines: Int\n    fuel_amount_tons: Float\n    payloads: RocketSecondStagePayloads\n    thrust: Force\n}\n\ntype RocketSecondStagePayloads{\n    option_1: String\n    composite_fairing: RocketSecondStagePayloadCompositeFairing\n}\n\ntype RocketSecondStagePayloadCompositeFairing{\n    height: Distance\n    diameter: Distance\n}\n\ntype LaunchRocketSecondStage{\n    block: Int\n    payloads: [Payload]\n}\n\ntype Payload{\n    customers: [String]\n    id: ID\n    manufacturer: String\n    nationality: String\n    norad_id: [Int]\n    orbit_params: PayloadOrbitParams\n    orbit: String\n    payload_mass_kg: Float\n    payload_mass_lbs: Float\n    payload_type: String\n    reused: Boolean\n}\n\ntype PayloadOrbitParams{\n    apoapsis_km: Float\n    arg_of_pericenter: Float\n    eccentricity: Float\n    epoch: String\n    inclination_deg: Float\n    lifespan_years: Float\n    longitude: Float\n    mean_anomaly: Float\n    mean_motion: Float\n    periapsis_km: Float\n    period_min: Float\n    raan: Float\n    reference_system: String\n    regime: String\n    semi_major_axis_km: Float\n}\n\ntype LaunchTelemetry{\n    flight_club: String\n}\n\ntype Ship{\n    abs: Int\n    active: Boolean\n    attempted_landings: Int\n    class: Int\n    course_deg: Int\n    home_port: String\n    id: ID\n    image: String\n    imo: Int\n    missions: [ShipMission]\n    mmsi: Int\n    model: String\n    name: String\n    position: ShipLocation\n    roles: [String]\n    speed_kn: Float\n    status: String\n    successful_landings: Int\n    type: String\n    url: String\n    weight_kg: Int\n    weight_lbs: Int\n    year_built: Int\n}\n\ntype ShipMission{\n    flight: String\n    name: String\n}\n\ntype ShipLocation{\n    latitude: Float\n    longitude: Float\n}\n\ntype HistoriesResult{\n    result: Result\n    data: [History]\n}\n\ntype Result{\n    totalCount: Int\n}\n\ntype Landpad{\n    attempted_landings: String\n    details: String\n    full_name: String\n    id: ID\n    landing_type: String\n    location: Location\n    status: String\n    successful_landings: String\n    wikipedia: String\n}\n\ntype Location{\n    latitude: Float\n    longitude: Float\n    name: String\n    region: String\n}\n\ninput LaunchFind{\n    apoapsis_km: Float\n    block: Int\n    cap_serial: String\n    capsule_reuse: String\n    core_flight: Int\n    core_reuse: String\n    core_serial: String\n    customer: String\n    eccentricity: Float\n    end: String\n    epoch: String\n    fairings_recovered: String\n    fairings_recovery_attempt: String\n    fairings_reuse: String\n    fairings_reused: String\n    fairings_ship: String\n    gridfins: String\n    id: ID\n    inclination_deg: Float\n    land_success: String\n    landing_intent: String\n    landing_type: String\n    landing_vehicle: String\n    launch_String_local: String\n    launch_String_utc: String\n    launch_success: String\n    launch_year: String\n    legs: String\n    lifespan_years: Float\n    longitude: Float\n    manufacturer: String\n    mean_motion: Float\n    mission_id: String\n    mission_name: String\n    nationality: String\n    norad_id: Int\n    orbit: String\n    payload_id: String\n    payload_type: String\n    periapsis_km: Float\n    period_min: Float\n    raan: Float\n    reference_system: String\n    regime: String\n    reused: String\n    rocket_id: String\n    rocket_name: String\n    rocket_type: String\n    second_stage_block: String\n    semi_major_axis_km: Float\n    ship: String\n    side_core1_reuse: String\n    side_core2_reuse: String\n    site_id: String\n    site_name_long: String\n    site_name: String\n    start: String\n    tbd: String\n    tentative_max_precision: String\n    tentative: String\n}\n\ntype LaunchesPastResult{\n    result: Result\n    data: [Launch]\n}\n\ntype Launchpad{\n    attempted_launches: Int\n    details: String\n    id: ID\n    location: Location\n    name: String\n    status: String\n    successful_launches: Int\n    vehicles_launched: [Rocket]\n    wikipedia: String\n}\n\ninput MissionsFind{\n    id: ID\n    manufacturer: String\n    name: String\n    payload_id: String\n}\n\ntype Mission{\n    description: String\n    id: ID\n    manufacturers: [String]\n    name: String\n    twitter: String\n    website: String\n    wikipedia: String\n    payloads: [Payload]\n}\n\ntype MissionResult{\n    result: Result\n    data: [Mission]\n}\n\ninput PayloadsFind{\n    apoapsis_km: Float\n    customer: String\n    eccentricity: Float\n    epoch: String\n    inclination_deg: Float\n    lifespan_years: Float\n    longitude: Float\n    manufacturer: String\n    mean_motion: Float\n    nationality: String\n    norad_id: Int\n    orbit: String\n    payload_id: ID\n    payload_type: String\n    periapsis_km: Float\n    period_min: Float\n    raan: Float\n    reference_system: String\n    regime: String\n    reused: Boolean\n    semi_major_axis_km: Float\n}\n\ntype Roadster{\n    apoapsis_au: Float\n    details: String\n    earth_distance_km: Float\n    earth_distance_mi: Float\n    eccentricity: Float\n    epoch_jd: Float\n    inclination: Float\n    launch_String_unix: String\n    launch_String_utc: String\n    launch_mass_kg: Int\n    launch_mass_lbs: Int\n    longitude: Float\n    mars_distance_km: Float\n    mars_distance_mi: Float\n    name: String\n    norad_id: Int\n    orbit_type: Float\n    periapsis_arg: Float\n    periapsis_au: Float\n    period_days: Float\n    semi_major_axis_au: Float\n    speed_kph: Float\n    speed_mph: Float\n    wikipedia: String\n}\n\ntype RocketsResult{\n    result: Result\n    data: [Rocket]\n}\n\ninput ShipsFind{\n    id: ID\n    name: String\n    model: String\n    type: String\n    role: String\n    active: Boolean\n    imo: Int\n    mmsi: Int\n    abs: Int\n    class: Int\n    weight_lbs: Int\n    weight_kg: Int\n    year_built: Int\n    home_port: String\n    status: String\n    speed_kn: Int\n    course_deg: Int\n    latitude: Float\n    longitude: Float\n    successful_landings: Int\n    attempted_landings: Int\n    mission: String\n}\n\ntype ShipsResult{\n    result: Result\n    data: [Ship]\n}\n\ntype CoreMission{\n    name: String\n    flight: Int\n}\n\ndirective @rateLimit(\n    max: Int\n    window: String\n    message: String\n    identityArgs: [String]\n) on FIELD_DEFINITION\n\nschema{\n    query: Query\n}"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an Ontology object",
            "schema": {
              "$ref": "#/definitions/Ontology"
            }
          }
        }
      }
    },
    "/sparql/ontology/{id}": {
      "post": {
        "tags": [
          "catalog"
        ],
        "summary": "OWL IDL into Ontology",
        "description": "Transform a OWL IDL into V1 Ontology - see https://www.w3.org/TR/owl-features/" ,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "OWL IDL  ",
            "required": true,
            "type": "string",
            "default": "<?xml version=\"1.0\"?>\n\n\n<!DOCTYPE Ontology [\n    <!ENTITY xsd \"http://www.w3.org/2001/XMLSchema#\" >\n    <!ENTITY xml \"http://www.w3.org/XML/1998/namespace\" >\n    <!ENTITY rdfs \"http://www.w3.org/2000/01/rdf-schema#\" >\n    <!ENTITY rdf \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" >\n]>\n\n\n<Ontology xmlns=\"http://www.w3.org/2002/07/owl#\"\n     xml:base=\"http://ffrdc.ebiquity.umbc.edu/ns/ontology/\"\n     xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"\n     xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n     xmlns:xml=\"http://www.w3.org/XML/1998/namespace\"\n     ontologyIRI=\"http://ffrdc.ebiquity.umbc.edu/ns/ontology/\"\n     versionIRI=\"http://ffrdc.ebiquity.umbc.edu/ns/ontology/\">\n    <Prefix name=\"\" IRI=\"http://www.w3.org/2002/07/owl#\"/>\n    <Prefix name=\"cbx\" IRI=\"http://cybox.mitre.org/cybox_v1#\"/>\n    <Prefix name=\"owl\" IRI=\"http://www.w3.org/2002/07/owl#\"/>\n    <Prefix name=\"rdf\" IRI=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"/>\n    <Prefix name=\"xsd\" IRI=\"http://www.w3.org/2001/XMLSchema#\"/>\n    <Prefix name=\"rdfs\" IRI=\"http://www.w3.org/2000/01/rdf-schema#\"/>\n    <Declaration>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Indicator\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Observable\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Weakness\"/>\n    </Declaration>\n    <Declaration>\n        <Class abbreviatedIRI=\"cbx:Observable\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"AttackPattern\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"BaseGroup\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"CCE\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"CVE\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"CVSSScoreType\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"ConfidenceType\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"EnvironmentalGroup\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"Exploit\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"Indicator\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"KillChain\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"KillChainPhase\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"Malware\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"OSVDB\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"StatementType\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"TemporalGroup\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Address\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#AtError\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Attack\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Attacker\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Backdoor\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#BotnetAttack\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#BoundaryCondition\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#BufferOverFlow\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#CWE\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Campaign\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ConfigurationError\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Consequence\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#CourseofAction\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#DataCorruption\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#DenialOfService\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#DirectoryExposure\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#DistributedCode\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#DomainExpert\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ExICMPEchoReq\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ExIPPacketSize\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ExceptionCondition\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ExcessForks\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ExploitTarget\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#File\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Hardware\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#IDPS\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#IPAddress\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#IPFrag\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#IPv4Address\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#IPv6Address\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Incident\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#InputValidationError\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#KernelModule\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Logic\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#LogicExploit\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#LossOfConf\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#LossOfIntegrity\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MACAddress\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MalformedInput\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Means\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MeansOrConsequence\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MemoryConsumption\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#MitnickAttack\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#NetFlood\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#NetworkState\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Observable\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#OperatingSystem\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#OtherTechnicalTerms\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ParisiticCode\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#PingOfDeath\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#PingScan\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#PrivilegeEsc\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Probe\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Process\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Product\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#RSTProbe\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#RaceCondition\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#RemoteAccess\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Rootkit\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#SelfPropagatingCode\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#SerialError\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Software\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Source\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#SynFlood\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#SynScan\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#SysCrash\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#System\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#TCPConnect\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#TCPPortScan\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#TTP\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#ThreatActor\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Time\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#TriggeredCode\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Trojans\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#UCOThing\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#UnauthRoot\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#UnauthUser\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#UserEnumeration\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Virus\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Vulnerability\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Web\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#WebBrowser\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#Worm\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"#rstProbe\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChain\"/>\n    </Declaration>\n    <Declaration>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChainPhase\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"behaviour\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasAffectedSoftware\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasAssociatedCampaign\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasAttacker\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasCOAType\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasCVE_ID\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasCVSSScore\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasCampaign\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasConfiguration\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasCost\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasEfficacy\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasImpact\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasIncident\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasIndicator\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasIntendedEffect\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasKernel\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasKillChain\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasKillChainPhase\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasMotivation\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasOSVDB\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasObservable\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasObservedMeans\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasParameterObservables\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasRelatedCOA\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasRelatedIncident\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasRelatedIndicator\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasRelatedMeans\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasRequestedCOA\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasSoftware\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasSophistication\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasStage\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasStatus\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasSuggestedCOA\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasTakenCOA\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasType\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"hasWeakness\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#affectsProduct\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#associatedCampaigns\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#connectedTo\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#exploitsVulnerability\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasConsequence\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasIPv4Address\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasIPv6Address\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasMACAddress\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasMitigation\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasProduct\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasSource\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasTerms\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#hasVulnerability\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#isLaunchedBy\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#isResultOf\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#isUnderAttack\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#resultsIn\"/>\n    </Declaration>\n    <Declaration>\n        <ObjectProperty IRI=\"#usesAttacks\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"discoveryTime\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"hasConfidenceValue\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"hasTime\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"hasTitle\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#anomolousDataOutFlow\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#chgGid\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#chgPPid\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#chgSUid\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#chgUid\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#commonConsequences\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#cweExtendedSummary\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#cweID\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#cweName\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#cweSummary\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#dataSize\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#description\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#generated-on-datetime\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasAccessComplexity\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasAccessVector\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasAuthentication\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasAvailabilityImpact\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasCodeSize\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasConfidentialityImpact\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasDataSize\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasIntegrityImpact\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasLibSize\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasMACAddress\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasSource\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasVendor\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#hasVulnerabilityTerm\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#isNew\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#lastModifiedDateTime\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#newDestIP\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#newPortsOpened\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#numChildProcesses\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#numOpenFiles\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#numProcessesRunning\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#opensPort\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#publishedDateTime\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#score\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#selfDist\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#showsInfectionSigns\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#summary\"/>\n    </Declaration>\n    <Declaration>\n        <DataProperty IRI=\"#timeOfIntroduction\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"High\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"Low\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"Medium\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"None\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"Remedy\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"Response\"/>\n    </Declaration>\n    <Declaration>\n        <NamedIndividual IRI=\"Unknown\"/>\n    </Declaration>\n    <EquivalentClasses>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Indicator\"/>\n        <Class IRI=\"Indicator\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Observable\"/>\n        <Class abbreviatedIRI=\"cbx:Observable\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Weakness\"/>\n        <Class IRI=\"#CWE\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class abbreviatedIRI=\"cbx:Observable\"/>\n        <Class IRI=\"#Observable\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"CVSSScoreType\"/>\n        <ObjectUnionOf>\n            <Class IRI=\"BaseGroup\"/>\n            <Class IRI=\"EnvironmentalGroup\"/>\n            <Class IRI=\"TemporalGroup\"/>\n        </ObjectUnionOf>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"KillChain\"/>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChain\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"KillChainPhase\"/>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChainPhase\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Attack\"/>\n        <Class IRI=\"#Incident\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Attack\"/>\n        <ObjectMinCardinality cardinality=\"1\">\n            <ObjectProperty IRI=\"#hasConsequence\"/>\n            <Class IRI=\"#Consequence\"/>\n        </ObjectMinCardinality>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Attack\"/>\n        <ObjectMinCardinality cardinality=\"1\">\n            <ObjectProperty IRI=\"#hasMeans\"/>\n            <Class IRI=\"#Means\"/>\n        </ObjectMinCardinality>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Attacker\"/>\n        <Class IRI=\"#ThreatActor\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Consequence\"/>\n        <Class IRI=\"#Observable\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Means\"/>\n        <Class IRI=\"#TTP\"/>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Means\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"behaviour\"/>\n            <ObjectUnionOf>\n                <Class IRI=\"AttackPattern\"/>\n                <Class IRI=\"Exploit\"/>\n                <Class IRI=\"Malware\"/>\n            </ObjectUnionOf>\n        </ObjectSomeValuesFrom>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#Product\"/>\n        <ObjectUnionOf>\n            <Class IRI=\"#Hardware\"/>\n            <Class IRI=\"#Software\"/>\n        </ObjectUnionOf>\n    </EquivalentClasses>\n    <EquivalentClasses>\n        <Class IRI=\"#RemoteAccess\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#PrivilegeEsc\"/>\n        </ObjectSomeValuesFrom>\n    </EquivalentClasses>\n    <SubClassOf>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Indicator\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Observable\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"http://capec.mitre.org/capec_v1#Weakness\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class abbreviatedIRI=\"cbx:Observable\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"AttackPattern\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"BaseGroup\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"CCE\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"CVE\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"CVSSScoreType\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"ConfidenceType\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"EnvironmentalGroup\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"Exploit\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"Indicator\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"KillChain\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"KillChainPhase\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"Malware\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"OSVDB\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"StatementType\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"TemporalGroup\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Address\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#AtError\"/>\n        <Class IRI=\"#LogicExploit\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Attack\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Attacker\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Backdoor\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Backdoor\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#RemoteAccess\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#BotnetAttack\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#BoundaryCondition\"/>\n        <Class IRI=\"#InputValidationError\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#BufferOverFlow\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#BufferOverFlow\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DenialOfService\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#CWE\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Campaign\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Campaign\"/>\n        <ObjectMinCardinality cardinality=\"1\">\n            <ObjectProperty IRI=\"#usesAttacks\"/>\n            <Class IRI=\"#Attack\"/>\n        </ObjectMinCardinality>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ConfigurationError\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ConfigurationError\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DenialOfService\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Consequence\"/>\n        <Class IRI=\"#MeansOrConsequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#CourseofAction\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DataCorruption\"/>\n        <Class IRI=\"#LossOfIntegrity\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DenialOfService\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DirectoryExposure\"/>\n        <Class IRI=\"#LossOfConf\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DistributedCode\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DistributedCode\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#BotnetAttack\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#DomainExpert\"/>\n        <Class IRI=\"#Source\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ExICMPEchoReq\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ExIPPacketSize\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ExceptionCondition\"/>\n        <Class IRI=\"#LogicExploit\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ExcessForks\"/>\n        <Class IRI=\"#DenialOfService\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ExploitTarget\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#File\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Hardware\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IDPS\"/>\n        <Class IRI=\"#Source\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IPAddress\"/>\n        <Class IRI=\"#Address\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IPFrag\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IPFrag\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DenialOfService\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IPv4Address\"/>\n        <Class IRI=\"#IPAddress\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#IPv6Address\"/>\n        <Class IRI=\"#IPAddress\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Incident\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#InputValidationError\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#InputValidationError\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfConf\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#KernelModule\"/>\n        <Class IRI=\"#Software\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Logic\"/>\n        <Class IRI=\"#TriggeredCode\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#LogicExploit\"/>\n        <Class IRI=\"#Logic\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#LossOfConf\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#LossOfIntegrity\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MACAddress\"/>\n        <Class IRI=\"#Address\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MalformedInput\"/>\n        <Class IRI=\"#InputValidationError\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Means\"/>\n        <Class IRI=\"#MeansOrConsequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Means\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#Consequence\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MeansOrConsequence\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MemoryConsumption\"/>\n        <Class IRI=\"#DenialOfService\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#MitnickAttack\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#NetFlood\"/>\n        <Class IRI=\"#DenialOfService\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#NetworkState\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Observable\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#OperatingSystem\"/>\n        <Class IRI=\"#Software\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#OtherTechnicalTerms\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ParisiticCode\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ParisiticCode\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfIntegrity\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#PingOfDeath\"/>\n        <Class IRI=\"#DenialOfService\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#PingScan\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#PrivilegeEsc\"/>\n        <Class IRI=\"#LossOfConf\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Probe\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Probe\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DirectoryExposure\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Probe\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#MitnickAttack\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Process\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Product\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#RSTProbe\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#RaceCondition\"/>\n        <Class IRI=\"#LogicExploit\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#RemoteAccess\"/>\n        <Class IRI=\"#Consequence\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Rootkit\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Rootkit\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DenialOfService\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Rootkit\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfConf\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SelfPropagatingCode\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SelfPropagatingCode\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfConf\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SerialError\"/>\n        <Class IRI=\"#LogicExploit\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Software\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Source\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SynFlood\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SynFlood\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#NetFlood\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SynScan\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#SysCrash\"/>\n        <Class IRI=\"#DenialOfService\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#System\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TCPConnect\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TCPPortScan\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TCPPortScan\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#DirectoryExposure\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TTP\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#ThreatActor\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Time\"/>\n        <Class IRI=\"#TriggeredCode\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TriggeredCode\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TriggeredCode\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfConf\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#TriggeredCode\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfIntegrity\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Trojans\"/>\n        <Class IRI=\"#MaliciousCodeExecution\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Trojans\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#LossOfConf\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Trojans\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#RemoteAccess\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#UnauthRoot\"/>\n        <Class IRI=\"#PrivilegeEsc\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#UnauthUser\"/>\n        <Class IRI=\"#PrivilegeEsc\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#UserEnumeration\"/>\n        <Class IRI=\"#Means\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#UserEnumeration\"/>\n        <ObjectSomeValuesFrom>\n            <ObjectProperty IRI=\"#resultsIn\"/>\n            <Class IRI=\"#PrivilegeEsc\"/>\n        </ObjectSomeValuesFrom>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Virus\"/>\n        <Class IRI=\"#SelfPropagatingCode\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Vulnerability\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Web\"/>\n        <Class IRI=\"#Source\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#WebBrowser\"/>\n        <Class IRI=\"#Software\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#Worm\"/>\n        <Class IRI=\"#SelfPropagatingCode\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"#rstProbe\"/>\n        <Class IRI=\"#Probe\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChain\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <SubClassOf>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChainPhase\"/>\n        <Class IRI=\"#UCOThing\"/>\n    </SubClassOf>\n    <EquivalentObjectProperties>\n        <ObjectProperty IRI=\"hasAffectedSoftware\"/>\n        <ObjectProperty IRI=\"hasObservable\"/>\n    </EquivalentObjectProperties>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasAttacker\"/>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasCost\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasObservedMeans\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasRequestedCOA\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasTakenCOA\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"hasWeakness\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"#hasIPv4Address\"/>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"#hasIPv6Address\"/>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"#hasInformationSource\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <SubObjectPropertyOf>\n        <ObjectProperty IRI=\"#hasMACAddress\"/>\n        <ObjectProperty abbreviatedIRI=\"owl:topObjectProperty\"/>\n    </SubObjectPropertyOf>\n    <InverseObjectProperties>\n        <ObjectProperty IRI=\"#isResultOf\"/>\n        <ObjectProperty IRI=\"#resultsIn\"/>\n    </InverseObjectProperties>\n    <FunctionalObjectProperty>\n        <ObjectProperty IRI=\"#hasTerms\"/>\n    </FunctionalObjectProperty>\n    <SymmetricObjectProperty>\n        <ObjectProperty IRI=\"#connectedTo\"/>\n    </SymmetricObjectProperty>\n    <IrreflexiveObjectProperty>\n        <ObjectProperty IRI=\"#connectedTo\"/>\n    </IrreflexiveObjectProperty>\n    <IrreflexiveObjectProperty>\n        <ObjectProperty IRI=\"#isResultOf\"/>\n    </IrreflexiveObjectProperty>\n    <IrreflexiveObjectProperty>\n        <ObjectProperty IRI=\"#isUnderAttack\"/>\n    </IrreflexiveObjectProperty>\n    <IrreflexiveObjectProperty>\n        <ObjectProperty IRI=\"#resultsIn\"/>\n    </IrreflexiveObjectProperty>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"behaviour\"/>\n        <Class IRI=\"#TTP\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasAssociatedCampaign\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasAssociatedCampaign\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasAttacker\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasCOAType\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasCVE_ID\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasCVSSScore\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasCampaign\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasConfiguration\"/>\n        <Class IRI=\"#ExploitTarget\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasCost\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasEfficacy\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasImpact\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasImpact\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIncident\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIndicator\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIndicator\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIntendedEffect\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIntendedEffect\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasIntendedEffect\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasKernel\"/>\n        <Class IRI=\"#OperatingSystem\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasKillChain\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasKillChainPhase\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasKillChainPhase\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasMotivation\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasOSVDB\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasObservable\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasObservable\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasObservable\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasObservedMeans\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasParameterObservables\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasRelatedCOA\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasRelatedIncident\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasRelatedIndicator\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasRelatedMeans\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasRequestedCOA\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasSoftware\"/>\n        <Class IRI=\"#Observable\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasSophistication\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasStage\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasStatus\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasSuggestedCOA\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasTakenCOA\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasType\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"hasWeakness\"/>\n        <Class IRI=\"#ExploitTarget\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#affectsProduct\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#associatedCampaigns\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#connectedTo\"/>\n        <Class IRI=\"#System\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#exploitsVulnerability\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasConsequence\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n        <Class IRI=\"#System\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasMitigation\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasProduct\"/>\n        <Class IRI=\"#System\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasSource\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasSource\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasTerms\"/>\n        <Class IRI=\"#Web\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasVulnerability\"/>\n        <Class IRI=\"#ExploitTarget\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasVulnerability\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#hasVulnerability\"/>\n        <Class IRI=\"#Product\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#isLaunchedBy\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#isLaunchedBy\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#isResultOf\"/>\n        <Class IRI=\"#Consequence\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#isUnderAttack\"/>\n        <Class IRI=\"#System\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#resultsIn\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyDomain>\n        <ObjectProperty IRI=\"#usesAttacks\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyDomain>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"behaviour\"/>\n        <ObjectUnionOf>\n            <Class IRI=\"AttackPattern\"/>\n            <Class IRI=\"Exploit\"/>\n            <Class IRI=\"Malware\"/>\n        </ObjectUnionOf>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasAssociatedCampaign\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasAttacker\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasCVE_ID\"/>\n        <Class IRI=\"CVE\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasCVSSScore\"/>\n        <Class IRI=\"CVSSScoreType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasCampaign\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasConfidenceValue\"/>\n        <Class IRI=\"ConfidenceType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasConfiguration\"/>\n        <Class IRI=\"CCE\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasCost\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasEfficacy\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasImpact\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasIncident\"/>\n        <Class IRI=\"#Incident\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasIndicator\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasIntendedEffect\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasKernel\"/>\n        <Class IRI=\"#KernelModule\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasKillChain\"/>\n        <Class IRI=\"http://stix.mitre.org/STIX#KillChain\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasKillChainPhase\"/>\n        <Class IRI=\"KillChainPhase\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasMotivation\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasOSVDB\"/>\n        <Class IRI=\"OSVDB\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasObservable\"/>\n        <Class IRI=\"#Observable\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasObservedMeans\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasParameterObservables\"/>\n        <Class IRI=\"#Consequence\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasRelatedCOA\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasRelatedIncident\"/>\n        <Class IRI=\"#Incident\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasRelatedIndicator\"/>\n        <Class IRI=\"Indicator\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasRelatedMeans\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasRequestedCOA\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasSoftware\"/>\n        <Class IRI=\"#Software\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasSophistication\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasStage\"/>\n        <ObjectOneOf>\n            <NamedIndividual IRI=\"Response\"/>\n            <NamedIndividual IRI=\"Remedy\"/>\n        </ObjectOneOf>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasSuggestedCOA\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasTakenCOA\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasType\"/>\n        <Class IRI=\"StatementType\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"hasWeakness\"/>\n        <Class IRI=\"#CWE\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#affectsProduct\"/>\n        <Class IRI=\"#Product\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#associatedCampaigns\"/>\n        <Class IRI=\"#Campaign\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#connectedTo\"/>\n        <Class IRI=\"#System\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#exploitsVulnerability\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasConsequence\"/>\n        <Class IRI=\"#Consequence\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasIPAddress\"/>\n        <Class IRI=\"#IPAddress\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasMeans\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasMitigation\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasProduct\"/>\n        <Class IRI=\"#Product\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasSource\"/>\n        <Class IRI=\"#Source\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasTerms\"/>\n        <Class IRI=\"#OtherTechnicalTerms\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#hasVulnerability\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#isLaunchedBy\"/>\n        <Class IRI=\"#Attacker\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#isResultOf\"/>\n        <Class IRI=\"#Means\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#isUnderAttack\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#isUnderAttack\"/>\n        <Class IRI=\"#Consequence\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#resultsIn\"/>\n        <Class IRI=\"#Consequence\"/>\n    </ObjectPropertyRange>\n    <ObjectPropertyRange>\n        <ObjectProperty IRI=\"#usesAttacks\"/>\n        <Class IRI=\"#Attack\"/>\n    </ObjectPropertyRange>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#generated-on-datetime\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasAccessComplexity\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasAccessVector\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasAuthentication\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasAvailabilityImpact\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasConfidentialityImpact\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasIntegrityImpact\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#hasSource\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <SubDataPropertyOf>\n        <DataProperty IRI=\"#score\"/>\n        <DataProperty IRI=\"#hasSeverityScore\"/>\n    </SubDataPropertyOf>\n    <FunctionalDataProperty>\n        <DataProperty IRI=\"#hasMACAddress\"/>\n    </FunctionalDataProperty>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"discoveryTime\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTime\"/>\n        <Class IRI=\"#Attack\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"Indicator\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#Attacker\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#Campaign\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#Consequence\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#CourseofAction\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#Means\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#anomolousDataOutFlow\"/>\n        <Class IRI=\"#NetworkState\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#chgGid\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#chgPPid\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#chgSUid\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#chgUid\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#commonConsequences\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#cweExtendedSummary\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#cweID\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#cweName\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#cweSummary\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#dataSize\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#description\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#generated-on-datetime\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasAccessComplexity\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasAccessVector\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasAuthentication\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasAvailabilityImpact\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasCodeSize\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasConfidentialityImpact\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasDataSize\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasIntegrityImpact\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasLibSize\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasMACAddress\"/>\n        <Class IRI=\"#System\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasVendor\"/>\n        <Class IRI=\"#Product\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#hasVulnerabilityTerm\"/>\n        <Class IRI=\"#Web\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#isNew\"/>\n        <Class IRI=\"#Hardware\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#isNew\"/>\n        <Class IRI=\"#KernelModule\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#lastModifiedDateTime\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#newDestIP\"/>\n        <Class IRI=\"#NetworkState\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#newPortsOpened\"/>\n        <Class IRI=\"#NetworkState\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#numChildProcesses\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#numOpenFiles\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#numProcessesRunning\"/>\n        <Class IRI=\"#System\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#opensPort\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#publishedDateTime\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#score\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#selfDist\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#showsInfectionSigns\"/>\n        <Class IRI=\"#Process\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#summary\"/>\n        <Class IRI=\"#Vulnerability\"/>\n    </DataPropertyDomain>\n    <DataPropertyDomain>\n        <DataProperty IRI=\"#timeOfIntroduction\"/>\n        <Class IRI=\"#CWE\"/>\n    </DataPropertyDomain>\n    <DataPropertyRange>\n        <DataProperty IRI=\"discoveryTime\"/>\n        <Datatype abbreviatedIRI=\"xsd:dateTime\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"hasConfidenceValue\"/>\n        <Datatype abbreviatedIRI=\"xsd:float\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"hasTime\"/>\n        <Datatype abbreviatedIRI=\"xsd:dateTime\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"hasTitle\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#anomolousDataOutFlow\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#chgGid\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#chgPPid\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#chgSUid\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#chgUid\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#dataSize\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#description\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasAccessComplexity\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasAccessVector\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasCodeSize\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasDataSize\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasLibSize\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasMACAddress\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasVendor\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#hasVulnerabilityTerm\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#isNew\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#lastModifiedDateTime\"/>\n        <Datatype abbreviatedIRI=\"xsd:dateTime\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#newDestIP\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#newPortsOpened\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#numChildProcesses\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#numOpenFiles\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#numProcessesRunning\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#opensPort\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#publishedDateTime\"/>\n        <Datatype abbreviatedIRI=\"xsd:dateTime\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#score\"/>\n        <Datatype abbreviatedIRI=\"xsd:float\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#selfDist\"/>\n        <Datatype abbreviatedIRI=\"xsd:integer\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#showsInfectionSigns\"/>\n        <Datatype abbreviatedIRI=\"xsd:boolean\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#summary\"/>\n        <Datatype abbreviatedIRI=\"xsd:string\"/>\n    </DataPropertyRange>\n    <DataPropertyRange>\n        <DataProperty IRI=\"#timeOfIntroduction\"/>\n        <Datatype abbreviatedIRI=\"xsd:dateTime\"/>\n    </DataPropertyRange>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>CVE</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">The details of the CVE class are in another ontology yet to be imported.\nCVE is not equal to Vulnerability because Vulnerability also refers to OSVDB_ID</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>hasAffectedSoftware</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">The Affected_Software field captures the list of platforms and software that are affected by this vulnerability. It is implemented through the CybOX Observables, the suggested CybOX objects to use are the Product Object, the Device Object, the System Object, and the Code Object.</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>hasAffectedSoftware</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">http://stixproject.github.io/data-model/1.2/et/VulnerabilityType/</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>hasStage</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">hasStage is used to denote stage/phase of a particular course of action represented as nominals</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <Annotation>\n            <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n            <Literal datatypeIRI=\"&rdf;PlainLiteral\">An attack (noun) is the use of an exploit(s) by an adversary to take advantage of a weakness(s) with the intent of achieving a negative technical impact(s).\n\nSource: https://capec.mitre.org/about/glossary.html#Attack\n\nFrom the bove definition, &quot;the use of an exploit(s)&quot; is means, &quot;an adversary&quot; is attacker, and &quot;to take advantage of... with the intent of achieving a negative technical impact(s)&quot; is consequence.</Literal>\n        </Annotation>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#Attack</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">An attack (noun) is the use of an exploit(s) by an adversary to take advantage of a weakness(s) with the intent of achieving a negative technical impact(s).\n\nSource: https://capec.mitre.org/about/glossary.html#Attack\n\nFrom the bove definition, &quot;the use of an exploit(s)&quot; is means, &quot;an adversary&quot; is attacker, and &quot;negative technical impact(s)&quot; is consequence.</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#Attacker</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">EquivalentClass: ThreatActor\nThreatActors are characterizations of malicious actors (or adversaries) representing a cyber attack threat including presumed intent and historically observed behavior.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#BotnetAttack</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Botnet</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#BoundaryCondition</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Off-by-one_error</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#BufferOverFlow</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Buffer_overflow</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#Campaign</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">Campaigns are instances of ThreatActors pursuing an intent, as observed through sets of Incidents and/or TTP, potentially across organizations.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#CourseofAction</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">CoursesOfAction are specific measures to be taken to address threat whether they are corrective or preventative to address ExploitTargets, or responsive to counter or mitigate the potential impacts of Incidents.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#DenialOfService</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Denial-of-service_attack</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#ExceptionCondition</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Exception_handling</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#ExploitTarget</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">ExploitTargets are vulnerabilities or weaknesses in software, systems, networks or configurations that are targeted for exploitation by the TTP of a ThreatActor.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#File</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">A computer file is a resource for storing information, which is available to a computer program and is usually based on some kind of durable storage. A file is &quot;durable&quot; in the sense that it remains available for other programs to use after the program that created it has finished executing. Computer files can be considered as the modern counterpart of paper documents which traditionally are kept in office and library files, and this is the source of the term.\n\nhttp://dbpedia.org/page/Computer_file</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Hardware</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Computer_hardware</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#IPAddress</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/IP_address</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#IPFrag</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/IP_fragmentation_attacks</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#Incident</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">Incidents are discrete instances of Indicators affecting an organization along with information discovered or decided during an incident response investigation.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#KernelModule</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Loadable_kernel_module</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#MalformedInput</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://sw.opencyc.org/concept/Mx4rwQShKJwpEbGdrcN5Y29ycA</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#MaliciousCodeExecution</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Arbitrary_code_execution</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#MitnickAttack</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/The_Art_of_Intrusion</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#NetFlood</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/describe/?url=http%3A%2F%2Fsw.opencyc.org%2F2008%2F06%2F10%2Fconcept%2Fen%2FTribeFloodNet_DenialOfServiceProgram&amp;sid=7707</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#Observable</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">Observables are the “base” construct within the STIX architecture. Observables are stateful properties or measurable events pertinent to the operation of computers and networks. Information about a file (name, hash, size, etc.), a registry key value, a service being started, or an HTTP request being sent are all simple examples of observables. STIX leverages CybOX for its representation of Observables.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#OperatingSystem</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/ontology/operatingSystem</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#PingOfDeath</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Ping_of_death</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Process</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Category:Process_(computing)</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#RaceCondition</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Race_condition</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#RemoteAccess</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://en.wikipedia.org/wiki/Remote_Access_Trojans_(RATs)</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Rootkit</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Rootkit</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Software</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/ontology/Software</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#SysCrash</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Fatal_system_error</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#System</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Computer</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#TTP</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">Tactics, Techniques and Procedures (TTP) are representations of the behavior or modus operandi of cyber adversaries.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <IRI>#ThreatActor</IRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">ThreatActors are characterizations of malicious actors (or adversaries) representing a cyber attack threat including presumed intent and historically observed behavior.\n\nSource: https://stix.mitre.org/about/documents/STIX_Whitepaper_v1.1.pdf</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Virus</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Computer_virus</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Vulnerability</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Vulnerability_(computing)</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#WebBrowser</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/class/yago/WebBrowser</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:seeAlso\"/>\n        <IRI>#Worm</IRI>\n        <Literal datatypeIRI=\"&xsd;anyURI\">http://dbpedia.org/resource/Computer_worm</Literal>\n    </AnnotationAssertion>\n    <AnnotationAssertion>\n        <AnnotationProperty abbreviatedIRI=\"rdfs:comment\"/>\n        <AbbreviatedIRI>xsd:string</AbbreviatedIRI>\n        <Literal datatypeIRI=\"&rdf;PlainLiteral\">Campaigns are instances of ThreatActors pursuing an intent, as observed through sets of Incidents and/or TTP, potentially across organizations.</Literal>\n    </AnnotationAssertion>\n</Ontology>\n\n\n\n<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an Ontology object",
            "schema": {
              "$ref": "#/definitions/Ontology"
            }
          }
        }
      }
    },
    "/sql/ontology/{id}": {
      "post": {
        "tags": [
          "catalog"
        ],
        "summary": "SQL DDL into Ontology",
        "description": "Transform a SQL DDL into V1 Ontology " ,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "DDL SQL  ",
            "required": true,
            "type": "string",
            "default": "CREATE TABLE book\n(\n    id           NUMBER(7)     NOT NULL PRIMARY KEY,\n    author_id    NUMBER(7)     NOT NULL,\n    title        VARCHAR(400) NOT NULL,\n    published_in NUMBER(7)     NOT NULL,\n    language_id  NUMBER(7)     NOT NULL,\n\n    CONSTRAINT fk_book_author FOREIGN KEY (author_id) REFERENCES author(id),\n    CONSTRAINT fk_book_language FOREIGN KEY (language_id) REFERENCES language(id)\n);"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an Ontology object",
            "schema": {
              "$ref": "#/definitions/Ontology"
            }
          }
        }
      }
    },


    "/query/graph/api/findPath": {
      "get": {
        "tags": [
          "GraphApi"
        ],
        "summary": "Execute find Path graph query",
        "description": "Execute find Path graph query between two concrete vertices",
        "parameters": [
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceEntity",
            "in": "query",
            "description": "source entity type",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "vertex source Id ",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetEntity",
            "in": "query",
            "description": "target entity type",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetId",
            "in": "query",
            "description": "vertex target Id ",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationType",
            "in": "query",
            "description": "Relation Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxHops",
            "in": "query",
            "description": "maximum number of hops",
            "required": true,
            "type": "integer"
          }

        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },


    "/query/graph/api/getVertex": {
      "get": {
        "tags": [
          "GraphApi"
        ],
        "summary": "Execute get vertex by id",
        "description": "Execute find specific vertex by id",
        "parameters": [
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "entity type",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "vertex Id ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query/graph/api/getNeighbors": {
      "get": {
        "tags": [
          "GraphApi"
        ],
        "summary": "Execute get vertex & neighbors by id",
        "description": "Execute find specific vertex & its neighbors by id",
        "parameters": [
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "entity type",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "vertex Id ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },

    "/query/cypher": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit a cypher query request",
        "description": "submit a query to the engine",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "Cypher Query json request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CypherQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query/cypher/run": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "submit & run cypher query directly  ",
        "description": "submit & run a query to the engine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursorType",
            "in": "query",
            "description": "cursorType",
            "required": false,
            "enum": ["graph","csv","forwardPaths","projection","count"]
          },
          {
            "name": "cypher",
            "in": "query",
            "description": "cypher query",
            "required": true,
            "type": "string",
            "default": "Match  (p1:Entity)-[hasEv1:hasEvalue]->(value1:Evalue),\n       (p1:Entity)-[hasRelEn:relatedEntity]->(p2:Entity ),\n       (p2:Entity)-[hasEv2:hasEvalue]->(value2:Evalue {stringValue:'Myriel'})  return *"
          },
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },

    "/query/graphQL": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit a graphQL query request",
        "description": "submit a graphQL to the engine",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "graphQL Query json request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphQLQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query/graphQL/run": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "submit & run graphQL query directly  ",
        "description": "submit & run a graphQL query to the engine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursorType",
            "in": "query",
            "description": "cursorType",
            "required": false,
            "enum": ["graph","csv","forwardPaths"]
          },
          {
            "name": "graphQL",
            "in": "query",
            "description": "graphQL query",
            "required": true,
            "type": "string",
            "default": "{\n    human {\n        name,\n        friends {\n            name\n        },\n        owns {\n            name,\n            appearsIn,\n            friends {\n                name,\n                description\n            }\n        }\n    }\n}"
          },
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },

    "/query/sparql": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit a sparql query request",
        "description": "submit a sparql to the engine",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "sparql Query json request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SparqlQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query/sparql/run": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "submit & run sparql query directly  ",
        "description": "submit & run a sparql query to the engine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursorType",
            "in": "query",
            "description": "cursorType",
            "required": false,
            "enum": ["graph","csv","forwardPaths"]
          },
          {
            "name": "sparql",
            "in": "query",
            "description": "sparql query",
            "required": true,
            "type": "string",
            "default": "\"PREFIX foaf:  <http://xmlns.com/foaf/0.1/>\\n\" +\n \"SELECT ?name\\n\" +\n \"WHERE {\\n\" +\n \"    ?person foaf:firstName ?name .\\n\" +\n \"    ?person rdf:type foaf:Person .\\n\" +\n \"}\""
          },
          {
            "name": "ontology",
            "in": "query",
            "description": "ontology id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },

    "/query/v1": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit a (V1) query request",
        "description": "submit a query to the engine",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "V1 Query json request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery (HATEOAS Rest Specification).",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query/v1/validate": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit & validate V1 query directly  ",
        "description": "submit & validate a query to the engine",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "V1 Query json ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query validation summery ",
            "schema": {
              "$ref": "#/definitions/QueryValidation"
            }
          }
        }
      }
    },
    "/query/v1/plan": {
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "submit V1 query and see generated plan ",
        "description": "submit V1 query and see generated plan ",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "V1 Query json ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Plan",
            "schema": {
              "$ref": "#/definitions/PlanInfo"
            }
          }
        }
      }
    },
    "/query/v1/traversal": {
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "submit V1 query and see generated execution traversal gremlin ",
        "description": "submit V1 query and see generated execution traversal gremlin ",
        "parameters": [
          {
            "in": "body",
            "name": "<body>",
            "description": "V1 Query json ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Traversal gremlin",
            "schema": {
              "$ref": "#/definitions/TraversalInfo"
            }
          }
        }
      }
    },
    "/query/v1/run": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "submit & run V1 query directly  ",
        "description": "submit & run a query to the engine",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursorType",
            "in": "query",
            "description": "cursorType",
            "required": false,
            "enum": ["graph","csv","forwardPaths"]
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "V1 Query json ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Query summery with first page result data",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          }
        }
      }
    },
    "/query": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "Basic general query Info",
        "description": "Basic query Info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Basic query Info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryInfo"
              }
            }
          }
        }
      }
    },

    "/query/{id}": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "Fetch query info by ID",
        "description": "Fetch query info by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "query"
        ],
        "summary": "Deletes a query by ID",
        "description": "Deletes a query by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "A <code>204</code>"
          }
        }
      }
    },
    "/query/{id}/plan/json": {
      "get": {
        "tags": [
          "plan"
        ],
        "summary": "Fetch query plan by query ID",
        "description": "Fetch query plan by query ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/visualize": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "Fetch query and visualize as SVG graph",
        "description": "Fetch query by id and visualize as SVG graph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": "image/*",
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/asg/visualize": {
      "get": {
        "tags": [
          "query"
        ],
        "summary": "Fetch Asg query and visualize as SVG graph",
        "description": "Fetch ASG query by id and visualize as SVG graph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": "image/*",
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/plan/visualize": {
      "get": {
        "tags": [
          "plan"
        ],
        "summary": "Fetch Execution Plan and visualize as SVG graph",
        "description": "Fetch Execution Plan by query id and visualize as SVG graph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": "image/*",
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/cursor": {
      "post": {
        "tags": [
          "cursor"
        ],
        "summary": "Create cursor ",
        "description": "Create cursor for query Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursorType",
            "in": "query",
            "description": "cursorType",
            "required": false,
            "enum": [
              "graph",
              "csv",
              "forwardPaths",
              "projection"
            ]
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "Create Cursor request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCursorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/cursor/{cursorId}": {
      "get": {
        "tags": [
          "cursor"
        ],
        "summary": "Fetch cursor info by ID",
        "description": "Fetch cursor info by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "cursor"
        ],
        "summary": "Deletes a cursor by ID",
        "description": "Deletes a cursor by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "A <code>204</code>"
          }
        }
      }
    },
    "/query/{id}/cursor/{cursorId}/page/{pageId}": {
      "get": {
        "tags": [
          "page"
        ],
        "summary": "Fetch page info by ID",
        "description": "Fetch page info by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "page ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with a single query info or <code>404</code>",
            "schema": {
              "$ref": "#/definitions/QueryInfo"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "page"
        ],
        "summary": "Deletes a page by ID",
        "description": "Deletes a page by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "page ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "A <code>204</code>"
          }
        }
      }
    },
    "/query/{id}/cursor/{cursorId}/page/{pageId}/visualize": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Page data visualization ",
        "description": " Page data visualization  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "page ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with first page of data or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/cursor/{cursorId}/page/{pageId}/data": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Fetch Page data by id",
        "description": "Fetch Page data by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "page ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with first page of data or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{id}/cursor/{cursorId}/page/{pageId}/format/{format}/data": {
      "get": {
        "tags": [
          "page"
        ],
        "summary": "Fetch Page data with format ",
        "description": "Fetch Page data with format ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "path",
            "description": "page ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "path",
            "description": "data format",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with first page of data or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/query/{queryId}/cursor/{cursorId}/nextPageData": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Fetch Next Page data ",
        "description": "Fetch Next Page data with given size ",
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "query ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursorId",
            "in": "path",
            "description": "cursor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "deletePage",
            "in": "query",
            "description": "deletePage flag.",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns <code>200</code> with first page of data or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/dashboard/entities": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Show summery of DB existing entities",
        "description": "summery of DB entities",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> summery of db elements created (entities / properties) or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/created": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Show summery of created DB elements by creation time ",
        "description": "summery of time bases created DB elements ",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> Show summery of created DB elements by creation time  or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/dashboard/count": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Show summery of different server statistical metrics",
        "description": "summery server statistical metrics",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> Show summery of different server statistical metrics or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/load/ontology/{id}/indices": {
      "get": {
        "tags": [
          "init"
        ],
        "summary": "Generate E/S indices with related mapping associated with the ontology according to given physical provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Generate E/S indices with related mapping associated with the ontology according to given physical provider",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of indices created || or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/mapping": {
      "get": {
        "tags": [
          "init"
        ],
        "summary": "Generate E/S templates mapping related to the ontology according to given physical provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Generate E/S templates mapping related to the ontology according to given physical provider",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of mapping templates created || or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/init": {
      "get": {
        "tags": [
          "init"
        ],
        "summary": "Initialize (Drop & Create) E/S templates & Indices related to the ontology",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Initialize (Drop & Create) E/S templates & Indices related to the ontology",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of indices created or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/drop": {
      "get": {
        "tags": [
          "init"
        ],
        "summary": "Drop E/S templates & Indices related to the ontology",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Drop  E/S templates & Indices related to the ontology",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of indices dropped or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/graph/load": {
      "post": {
        "tags": [
          "load"
        ],
        "summary": "Load Logical graph into DB according to specific ontology Transformer (see /catalog/ontology)",
        "parameters": [
          {
            "name": "directive",
            "in": "query",
            "description": "Directive [UPSERT/INSERT] ",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "Logical Graph",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogicalGraph"
            }
          }
        ],
        "description": "Load Logical graph into DB according to specific ontology Transformer ",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of graph elements created or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/csv/load": {
      "post": {
        "tags": [
          "load"
        ],
        "summary": "Load csv into DB according to specific ontology Transformer (see /catalog/ontology)",
        "parameters": [
          {
            "name": "directive",
            "in": "query",
            "description": "Directive [UPSERT/INSERT] ",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "File Ontological type - edge / vertex",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "File Ontological label - Person/Dragon/Kingdom ...",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "<body>",
            "description": "CSV",
            "required": true,
            "type": "string"
          }
        ],
        "description": "Load Logical graph into DB according to specific ontology Transformer ",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of graph elements created or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },

    "/load/ontology/{id}/graph/upload": {
      "post": {
        "tags": [
          "upload"
        ],
        "summary": "Upload json/zip File with Logical graph into DB according to specific ontology Transformer (see /catalog/ontology)",
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "directive",
            "in": "query",
            "description": "Directive [UPSERT/INSERT] ",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "description": "Load Logical graph into DB according to specific ontology Transformer ",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of graph elements created or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/load/ontology/{id}/csv/upload": {
      "post": {
        "tags": [
          "upload"
        ],
        "summary": "Upload json/zip File with CSV file into DB according to specific ontology Transformer (see /catalog/ontology)",
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "directive",
            "in": "query",
            "description": "Directive [UPSERT/INSERT] ",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ontology ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "File Ontological type - edge / vertex",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "File Ontological label - Person/Dragon/Kingdom ...",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "description": "Load CSV into DB according to specific ontology Transformer ",
        "responses": {
          "200": {
            "description": "Returns <code>200</code> number of graph elements created or <code>404</code>"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },

  "definitions": {
    "SequenceNames": {
      "type": "string",
      "example": "Entity,Relation,Evalue,Rvalue"
    },
    "Ontology": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      },
      "example": {
        "ont": "LesMiserables",
        "entityTypes": [
          {
            "eType": "Person",
            "name": "Person",
            "metadata": [],
            "properties": [
              "id",
              "firstName",
              "lastName",
              "gender",
              "birthDate",
              "deathDate",
              "name"
            ]
          }
        ],
        "relationshipTypes": [
          {
            "rType": "Know",
            "name": "Know",
            "directional": true,
            "ePairs": [
              {
                "eTypeA": "Person",
                "eTypeB": "Person"
              }
            ],
            "metadata": [],
            "properties": [
              "id",
              "startDate"
            ]
          }
        ],
        "properties": [
          {
            "pType": "id",
            "name": "id",
            "type": "string"
          },
          {
            "pType": "firstName",
            "name": "firstName",
            "type": "string"
          },
          {
            "pType": "lastName",
            "name": "lastName",
            "type": "string"
          },
          {
            "pType": "gender",
            "name": "gender",
            "type": "string"
          },
          {
            "pType": "birthDate",
            "name": "birthDate",
            "type": "date"
          },
          {
            "pType": "startDate",
            "name": "startDate",
            "type": "date"
          },
          {
            "pType": "deathDate",
            "name": "deathDate",
            "type": "string"
          },
          {
            "pType": "name",
            "name": "name",
            "type": "string"
          }
        ]
      }
    },
    "CypherQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      },
      "example": {
        "id": "1",
        "name": "Q1",
        "ontology": "Knowledge",
        "query": "Match (p1:Person)-[o:Own]->(d2:Dragon )  return *",
        "type":"cypher"
      }
    },
    "SparqlQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      },
      "example": {
        "id": "1",
        "name": "q1",
        "ontology": "Knowledge",
        "query": "\"PREFIX foaf:  <http://xmlns.com/foaf/0.1/>\\n\" +\n \"SELECT ?name\\n\" +\n \"WHERE {\\n\" +\n  \"    ?person foaf:firstName ?name .\\n\" +\n \"    ?person rdf:type foaf:Person .\\n\" +\n \"}\""
      }
    },
    "GraphQLQueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      },
      "example": {
        "id": "1",
        "name": "Q1",
        "ontology": "Knowledge",
        "query": "{\n    person {\n        name,\n        knows {\n            name\n        },\n        owns {\n            name,\n            appearsIn,\n            knows {\n                name,\n                description\n            }\n        }\n    }\n}"
      }
    },
    "QueryRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        },
        "createCursorRequest": {
          "$ref": "#/definitions/CreateCursorRequest"
        }
      },
      "example": {
        "id": "1",
        "name": "Q1",
        "query": {
          "ont": "Knowledge",
          "elements": [
            {
              "type": "Start",
              "eNum": 0,
              "next": 1
            },
            {
              "type": "ETyped",
              "eNum": 1,
              "next": 2,
              "eTag": "A",
              "eType": "Entity"
            },
            {
              "eNum": 2,
              "type": "Quant1",
              "qType": "all",
              "next": [
                3,
                5
              ]
            },
            {
              "type": "Rel",
              "dir": "R",
              "eNum": 3,
              "next": 4,
              "rType": "relatedEntity"
            },
            {
              "type": "ETyped",
              "eNum": 4,
              "eTag": "B",
              "eType": "Entity"
            },
            {
              "type": "Rel",
              "dir": "R",
              "eNum": 5,
              "next": 6,
              "rType": "hasEvalue"
            },
            {
              "type": "ETyped",
              "eNum": 6,
              "eTag": "Ev",
              "eType": "Evalue"
            }
          ]
        },
        "createCursorRequest": {
          "maxExecutionTime": 600000,
          "cursorType": "LogicalGraphCursorRequest",
          "format": "XML",
          "createPageRequest": {
            "pageSize": 100,
            "fetch": false
          },
          "include": "all"
        }
      }
    },
    "CreateCursorRequest": {
      "type": "object",
      "properties": {
        "maxExecutionTime": {
          "type": "integer",
          "format": "int32"
        },
        "cursorType": {
          "type": "string"
        },
        "include": {
          "type": "string"
        },
        "createPageRequest": {
          "$ref": "#/definitions/CreatePageRequest"
        }
      },
      "example": {
        "maxExecutionTime": 600000,
        "cursorType": "graph",
        "createPageRequest": {
          "pageSize": 100,
          "fetch": false
        },
        "include": "all"
      }
    },
    "CreatePageRequest": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "fetch": {
          "type": "boolean"
        }
      },
      "example": {
        "pageSize": 100,
        "fetch": false
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "ont": {
          "type": "string"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Element"
          }
        }
      },
      "example": {
        "ont": "Knowledge",
        "elements": [
          {
            "type": "Start",
            "eNum": 0,
            "next": 1
          },
          {
            "type": "ETyped",
            "eNum": 1,
            "next": 2,
            "eTag": "A",
            "eType": "Entity"
          },
          {
            "eNum": 2,
            "type": "Quant1",
            "qType": "all",
            "next": [
              3,
              5
            ]
          },
          {
            "type": "Rel",
            "dir": "R",
            "eNum": 3,
            "next": 4,
            "rType": "relatedEntity"
          },
          {
            "type": "ETyped",
            "eNum": 4,
            "eTag": "B",
            "eType": "Entity"
          },
          {
            "type": "Rel",
            "dir": "R",
            "eNum": 5,
            "next": 6,
            "rType": "hasEvalue"
          },
          {
            "type": "ETyped",
            "eNum": 6,
            "eTag": "Ev",
            "eType": "Evalue"
          }
        ]
      }
    },
    "Element": {
      "type": "object",
      "properties": {
        "eNum": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "eType": {
          "type": "string"
        },
        "eID": {
          "type": "string"
        }
      }
    },
    "QueryInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PlanInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TraversalInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OntologyPhysicalProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "QueryValidation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "LogicalGraph": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNode"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalEdge"
          }
        }
      },
      "example": {
        "nodes": [
          {
            "metadata": {
              "group": 1
            },
            "id": "Myriel",
            "label": "Person",
            "properties": {
              "name": "Myriel",
              "age": 43
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Napoleon",
            "label": "Person",
            "properties": {
              "name": "Napoleon",
              "age": 68
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Mlle.Baptistine",
            "label": "Person",
            "properties": {
              "name": "Mlle.Baptistine",
              "age": 21
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Mme.Magloire",
            "label": "Person",
            "properties": {
              "name": "Mme.Magloire",
              "age": 13
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "CountessdeLo",
            "label": "Person",
            "properties": {
              "name": "CountessdeLo",
              "age": 32
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Geborand",
            "label": "Person",
            "properties": {
              "name": "Geborand",
              "age": 73
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Champtercier",
            "label": "Person",
            "properties": {
              "name": "Champtercier",
              "age": 51
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Cravatte",
            "label": "Person",
            "properties": {
              "name": "Cravatte",
              "age": 23
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "Count",
            "label": "Person",
            "properties": {
              "name": "Count",
              "age": 58
            }
          },
          {
            "metadata": {
              "group": 1
            },
            "id": "OldMan",
            "label": "Person",
            "properties": {
              "name": "OldMan",
              "age": 70
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Labarre",
            "label": "Person",
            "properties": {
              "name": "Labarre",
              "age": 27
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Valjean",
            "label": "Person",
            "properties": {
              "name": "Valjean",
              "age": 25
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Marguerite",
            "label": "Person",
            "properties": {
              "name": "Marguerite",
              "age": 40
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Mme.deR",
            "label": "Person",
            "properties": {
              "name": "Mme.deR",
              "age": 9
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Isabeau",
            "label": "Person",
            "properties": {
              "name": "Isabeau",
              "age": 10
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Gervais",
            "label": "Person",
            "properties": {
              "name": "Gervais",
              "age": 36
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Tholomyes",
            "label": "Person",
            "properties": {
              "name": "Tholomyes",
              "age": 42
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Listolier",
            "label": "Person",
            "properties": {
              "name": "Listolier",
              "age": 31
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Fameuil",
            "label": "Person",
            "properties": {
              "name": "Fameuil",
              "age": 30
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Blacheville",
            "label": "Person",
            "properties": {
              "name": "Blacheville",
              "age": 27
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Favourite",
            "label": "Person",
            "properties": {
              "name": "Favourite",
              "age": 20
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Dahlia",
            "label": "Person",
            "properties": {
              "name": "Dahlia",
              "age": 19
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Zephine",
            "label": "Person",
            "properties": {
              "name": "Zephine",
              "age": 17
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Fantine",
            "label": "Person",
            "properties": {
              "name": "Fantine",
              "age": 16
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Mme.Thenardier",
            "label": "Person",
            "properties": {
              "name": "Mme.Thenardier",
              "age": 37
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Thenardier",
            "label": "Person",
            "properties": {
              "name": "Thenardier",
              "age": 19
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Cosette",
            "label": "Person",
            "properties": {
              "name": "Cosette",
              "age": 24
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Javert",
            "label": "Person",
            "properties": {
              "name": "Javert",
              "age": 31
            }
          },
          {
            "metadata": {
              "group": 0
            },
            "id": "Fauchelevent",
            "label": "Person",
            "properties": {
              "name": "Fauchelevent",
              "age": 38
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Bamatabois",
            "label": "Person",
            "properties": {
              "name": "Bamatabois",
              "age": 21
            }
          },
          {
            "metadata": {
              "group": 3
            },
            "id": "Perpetue",
            "label": "Person",
            "properties": {
              "name": "Perpetue",
              "age": 29
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Simplice",
            "label": "Person",
            "properties": {
              "name": "Simplice",
              "age": 19
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Scaufflaire",
            "label": "Person",
            "properties": {
              "name": "Scaufflaire",
              "age": 19
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Woman1",
            "label": "Person",
            "properties": {
              "name": "Woman1",
              "age": 20
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Judge",
            "label": "Person",
            "properties": {
              "name": "Judge",
              "age": 39
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Champmathieu",
            "label": "Person",
            "properties": {
              "name": "Champmathieu",
              "age": 45
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Brevet",
            "label": "Person",
            "properties": {
              "name": "Brevet",
              "age": 35
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Chenildieu",
            "label": "Person",
            "properties": {
              "name": "Chenildieu",
              "age": 30
            }
          },
          {
            "metadata": {
              "group": 2
            },
            "id": "Cochepaille",
            "label": "Person",
            "properties": {
              "name": "Cochepaille",
              "age": 32
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Pontmercy",
            "label": "Person",
            "properties": {
              "name": "Pontmercy",
              "age": 22
            }
          },
          {
            "metadata": {
              "group": 6
            },
            "id": "Boulatruelle",
            "label": "Person",
            "properties": {
              "name": "Boulatruelle",
              "age": 21
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Eponine",
            "label": "Person",
            "properties": {
              "name": "Eponine",
              "age": 20
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Anzelma",
            "label": "Person",
            "properties": {
              "name": "Anzelma",
              "age": 190
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Woman2",
            "label": "Person",
            "properties": {
              "name": "Woman2",
              "age": 18
            }
          },
          {
            "metadata": {
              "group": 0
            },
            "id": "MotherInnocent",
            "label": "Person",
            "properties": {
              "name": "MotherInnocent",
              "age": 28
            }
          },
          {
            "metadata": {
              "group": 0
            },
            "id": "Gribier",
            "label": "Person",
            "properties": {
              "name": "Gribier",
              "age": 41
            }
          },
          {
            "metadata": {
              "group": 7
            },
            "id": "Jondrette",
            "label": "Person",
            "properties": {
              "name": "Jondrette",
              "age": 45
            }
          },
          {
            "metadata": {
              "group": 7
            },
            "id": "Mme.Burgon",
            "label": "Person",
            "properties": {
              "name": "Mme.Burgon",
              "age": 43
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Gavroche",
            "label": "Person",
            "properties": {
              "name": "Gavroche",
              "age": 23
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Gillenormand",
            "label": "Person",
            "properties": {
              "name": "Gillenormand",
              "age": 23
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Magnon",
            "label": "Person",
            "properties": {
              "name": "Magnon",
              "age": 36
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Mlle.Gillenormand",
            "label": "Person",
            "properties": {
              "name": "Mlle.Gillenormand",
              "age": 37
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Mme.Pontmercy",
            "label": "Person",
            "properties": {
              "name": "Mme.Pontmercy",
              "age": 38
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Mlle.Vaubois",
            "label": "Person",
            "properties": {
              "name": "Mlle.Vaubois",
              "age": 28
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Lt.Gillenormand",
            "label": "Person",
            "properties": {
              "name": "Lt.Gillenormand",
              "age": 24
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Marius",
            "label": "Person",
            "properties": {
              "name": "Marius",
              "age": 22
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "BaronessT",
            "label": "Person",
            "properties": {
              "name": "BaronessT",
              "age": 12
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Mabeuf",
            "label": "Person",
            "properties": {
              "name": "Mabeuf",
              "age": 11
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Enjolras",
            "label": "Person",
            "properties": {
              "name": "Enjolras",
              "age": 10
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Combeferre",
            "label": "Person",
            "properties": {
              "name": "Combeferre",
              "age": 9
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Prouvaire",
            "label": "Person",
            "properties": {
              "name": "Prouvaire",
              "age": 8
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Feuilly",
            "label": "Person",
            "properties": {
              "name": "Feuilly",
              "age": 7
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Courfeyrac",
            "label": "Person",
            "properties": {
              "name": "Courfeyrac",
              "age": 6
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Bahorel",
            "label": "Person",
            "properties": {
              "name": "Bahorel",
              "age": 18
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Bossuet",
            "label": "Person",
            "properties": {
              "name": "Bossuet",
              "age": 17
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Joly",
            "label": "Person",
            "properties": {
              "name": "Joly",
              "age": 16
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Grantaire",
            "label": "Person",
            "properties": {
              "name": "Grantaire",
              "age": 15
            }
          },
          {
            "metadata": {
              "group": 9
            },
            "id": "MotherPlutarch",
            "label": "Person",
            "properties": {
              "name": "MotherPlutarch",
              "age": 25
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Gueulemer",
            "label": "Person",
            "properties": {
              "name": "Gueulemer",
              "age": 27
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Babet",
            "label": "Person",
            "properties": {
              "name": "Babet",
              "age": 29
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Claquesous",
            "label": "Person",
            "properties": {
              "name": "Claquesous",
              "age": 30
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Montparnasse",
            "label": "Person",
            "properties": {
              "name": "Montparnasse",
              "age": 60
            }
          },
          {
            "metadata": {
              "group": 5
            },
            "id": "Toussaint",
            "label": "Person",
            "properties": {
              "name": "Toussaint",
              "age": 68
            }
          },
          {
            "metadata": {
              "group": 10
            },
            "id": "Child1",
            "label": "Person",
            "properties": {
              "name": "Child1",
              "age": 8
            }
          },
          {
            "metadata": {
              "group": 10
            },
            "id": "Child2",
            "label": "Person",
            "properties": {
              "name": "Child2",
              "age": 8
            }
          },
          {
            "metadata": {
              "group": 4
            },
            "id": "Brujon",
            "label": "Person",
            "properties": {
              "name": "Brujon",
              "age": 28
            }
          },
          {
            "metadata": {
              "group": 8
            },
            "id": "Mme.Hucheloup",
            "label": "Person",
            "properties": {
              "name": "Mme.Hucheloup",
              "age": 78
            }
          }
        ],
        "edges": [
          {
            "label": "know",
            "source": "Napoleon",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mlle.Baptistine",
            "target": "Myriel",
            "metadata": {
              "value": 8
            }
          },
          {
            "label": "know",
            "source": "Mme.Magloire",
            "target": "Myriel",
            "metadata": {
              "value": 10
            }
          },
          {
            "label": "know",
            "source": "Mme.Magloire",
            "target": "Mlle.Baptistine",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "CountessdeLo",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Geborand",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Champtercier",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Cravatte",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Count",
            "target": "Myriel",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "OldMan",
            "target": "Myriel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Valjean",
            "target": "Labarre",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Valjean",
            "target": "Mme.Magloire",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Valjean",
            "target": "Mlle.Baptistine",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Valjean",
            "target": "Myriel",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Marguerite",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.deR",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Isabeau",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gervais",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Listolier",
            "target": "Tholomyes",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fameuil",
            "target": "Tholomyes",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fameuil",
            "target": "Listolier",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Blacheville",
            "target": "Tholomyes",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Blacheville",
            "target": "Listolier",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Blacheville",
            "target": "Fameuil",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Favourite",
            "target": "Tholomyes",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Favourite",
            "target": "Listolier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Favourite",
            "target": "Fameuil",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Favourite",
            "target": "Blacheville",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Dahlia",
            "target": "Tholomyes",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Dahlia",
            "target": "Listolier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Dahlia",
            "target": "Fameuil",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Dahlia",
            "target": "Blacheville",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Dahlia",
            "target": "Favourite",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Tholomyes",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Listolier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Fameuil",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Blacheville",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Favourite",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Zephine",
            "target": "Dahlia",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Tholomyes",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Listolier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Fameuil",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Blacheville",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Favourite",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Dahlia",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Zephine",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Marguerite",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Fantine",
            "target": "Valjean",
            "metadata": {
              "value": 9
            }
          },
          {
            "label": "know",
            "source": "Mme.Thenardier",
            "target": "Fantine",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Mme.Thenardier",
            "target": "Valjean",
            "metadata": {
              "value": 7
            }
          },
          {
            "label": "know",
            "source": "Thenardier",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 13
            }
          },
          {
            "label": "know",
            "source": "Thenardier",
            "target": "Fantine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Thenardier",
            "target": "Valjean",
            "metadata": {
              "value": 12
            }
          },
          {
            "label": "know",
            "source": "Cosette",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Cosette",
            "target": "Valjean",
            "metadata": {
              "value": 31
            }
          },
          {
            "label": "know",
            "source": "Cosette",
            "target": "Tholomyes",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Cosette",
            "target": "Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Javert",
            "target": "Valjean",
            "metadata": {
              "value": 17
            }
          },
          {
            "label": "know",
            "source": "Javert",
            "target": "Fantine",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Javert",
            "target": "Thenardier",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Javert",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Javert",
            "target": "Cosette",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Fauchelevent",
            "target": "Valjean",
            "metadata": {
              "value": 8
            }
          },
          {
            "label": "know",
            "source": "Fauchelevent",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Bamatabois",
            "target": "Fantine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Bamatabois",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Bamatabois",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Perpetue",
            "target": "Fantine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Simplice",
            "target": "Perpetue",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Simplice",
            "target": "Valjean",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Simplice",
            "target": "Fantine",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Simplice",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Scaufflaire",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Woman1",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Woman1",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Judge",
            "target": "Valjean",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Judge",
            "target": "Bamatabois",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Champmathieu",
            "target": "Valjean",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Champmathieu",
            "target": "Judge",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Champmathieu",
            "target": "Bamatabois",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Brevet",
            "target": "Judge",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Brevet",
            "target": "Champmathieu",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Brevet",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Brevet",
            "target": "Bamatabois",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Chenildieu",
            "target": "Judge",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Chenildieu",
            "target": "Champmathieu",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Chenildieu",
            "target": "Brevet",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Chenildieu",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Chenildieu",
            "target": "Bamatabois",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Judge",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Champmathieu",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Brevet",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Chenildieu",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Cochepaille",
            "target": "Bamatabois",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Pontmercy",
            "target": "Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Boulatruelle",
            "target": "Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Eponine",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Eponine",
            "target": "Thenardier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Anzelma",
            "target": "Eponine",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Anzelma",
            "target": "Thenardier",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Anzelma",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Woman2",
            "target": "Valjean",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Woman2",
            "target": "Cosette",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Woman2",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "MotherInnocent",
            "target": "Fauchelevent",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "MotherInnocent",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gribier",
            "target": "Fauchelevent",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Mme.Burgon",
            "target": "Jondrette",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gavroche",
            "target": "Mme.Burgon",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Gavroche",
            "target": "Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gavroche",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gavroche",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gillenormand",
            "target": "Cosette",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Gillenormand",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Magnon",
            "target": "Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Magnon",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mlle.Gillenormand",
            "target": "Gillenormand",
            "metadata": {
              "value": 9
            }
          },
          {
            "label": "know",
            "source": "Mlle.Gillenormand",
            "target": "Cosette",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Mlle.Gillenormand",
            "target": "Valjean",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Mme.Pontmercy",
            "target": "Mlle.Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Pontmercy",
            "target": "Pontmercy",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mlle.Vaubois",
            "target": "Mlle.Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Lt.Gillenormand",
            "target": "Mlle.Gillenormand",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Lt.Gillenormand",
            "target": "Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Lt.Gillenormand",
            "target": "Cosette",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Mlle.Gillenormand",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Gillenormand",
            "metadata": {
              "value": 12
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Pontmercy",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Lt.Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Cosette",
            "metadata": {
              "value": 21
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Valjean",
            "metadata": {
              "value": 19
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Tholomyes",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Thenardier",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Eponine",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Marius",
            "target": "Gavroche",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "BaronessT",
            "target": "Gillenormand",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "BaronessT",
            "target": "Marius",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mabeuf",
            "target": "Marius",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mabeuf",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mabeuf",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Enjolras",
            "target": "Marius",
            "metadata": {
              "value": 7
            }
          },
          {
            "label": "know",
            "source": "Enjolras",
            "target": "Gavroche",
            "metadata": {
              "value": 7
            }
          },
          {
            "label": "know",
            "source": "Enjolras",
            "target": "Javert",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Enjolras",
            "target": "Mabeuf",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Enjolras",
            "target": "Valjean",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Combeferre",
            "target": "Enjolras",
            "metadata": {
              "value": 15
            }
          },
          {
            "label": "know",
            "source": "Combeferre",
            "target": "Marius",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Combeferre",
            "target": "Gavroche",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Combeferre",
            "target": "Mabeuf",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Prouvaire",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Prouvaire",
            "target": "Enjolras",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Prouvaire",
            "target": "Combeferre",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Gavroche",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Enjolras",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Prouvaire",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Combeferre",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Mabeuf",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Feuilly",
            "target": "Marius",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Marius",
            "metadata": {
              "value": 9
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Enjolras",
            "metadata": {
              "value": 17
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Combeferre",
            "metadata": {
              "value": 13
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Gavroche",
            "metadata": {
              "value": 7
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Mabeuf",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Feuilly",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Courfeyrac",
            "target": "Prouvaire",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Combeferre",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Gavroche",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Courfeyrac",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Mabeuf",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Enjolras",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Feuilly",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Prouvaire",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Bahorel",
            "target": "Marius",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Marius",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Courfeyrac",
            "metadata": {
              "value": 12
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Gavroche",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Bahorel",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Enjolras",
            "metadata": {
              "value": 10
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Feuilly",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Prouvaire",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Combeferre",
            "metadata": {
              "value": 9
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Mabeuf",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Bossuet",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Bahorel",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Bossuet",
            "metadata": {
              "value": 7
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Gavroche",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Courfeyrac",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Enjolras",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Feuilly",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Prouvaire",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Combeferre",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Mabeuf",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Joly",
            "target": "Marius",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Bossuet",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Enjolras",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Combeferre",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Courfeyrac",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Joly",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Bahorel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Feuilly",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Grantaire",
            "target": "Prouvaire",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "MotherPlutarch",
            "target": "Mabeuf",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Thenardier",
            "metadata": {
              "value": 5
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Gueulemer",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Thenardier",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Gueulemer",
            "metadata": {
              "value": 6
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Javert",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Babet",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Thenardier",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Babet",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Gueulemer",
            "metadata": {
              "value": 4
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Mme.Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Claquesous",
            "target": "Enjolras",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Babet",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Gueulemer",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Claquesous",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Montparnasse",
            "target": "Thenardier",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Toussaint",
            "target": "Cosette",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Toussaint",
            "target": "Javert",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Toussaint",
            "target": "Valjean",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Child1",
            "target": "Gavroche",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Child2",
            "target": "Gavroche",
            "metadata": {
              "value": 2
            }
          },
          {
            "label": "know",
            "source": "Child2",
            "target": "Child1",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Babet",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Gueulemer",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Thenardier",
            "metadata": {
              "value": 3
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Eponine",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Claquesous",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Brujon",
            "target": "Montparnasse",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Bossuet",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Joly",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Grantaire",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Bahorel",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Courfeyrac",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Gavroche",
            "metadata": {
              "value": 1
            }
          },
          {
            "label": "know",
            "source": "Mme.Hucheloup",
            "target": "Enjolras",
            "metadata": {
              "value": 1
            }
          }
        ]
      }
    },
    "LogicalEdge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "GraphQLSchema": {
      "type": "string"
    },
    "OWLSchema": {
      "type": "string"
    },
    "LogicalNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "anyOf": {
          "$ref": "#/definitions/Property"
        }
      }
    },
    "Properties": {
      "type": "object",
      "properties": {
        "anyOf": {
          "$ref": "#/definitions/Property"
        }
      }
    },
    "Property": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    }
  }
}
