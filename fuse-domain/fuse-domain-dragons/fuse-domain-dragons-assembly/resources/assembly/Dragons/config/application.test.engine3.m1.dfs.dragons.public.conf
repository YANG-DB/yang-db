application.env = engine2.m1.test
application.host = 0.0.0.0
application.port = 8888
application.profile = activeProfile

server.http.HeaderSize = 8k
# Max response buffer size
server.http.ResponseBufferSize = 10m
# Max request body size to keep in memory
server.http.RequestBufferSize = 10m
# Max request size total (body + header)
server.http.MaxRequestSize = 100m

modules.activeProfile = [
  "com.yangdb.fuse.services.modules.ServiceModule",
  "com.yangdb.fuse.services.modules.LoggingJacksonModule",
  "com.yangdb.fuse.dispatcher.modules.CoreDispatcherModule",
  "com.yangdb.fuse.dispatcher.query.graphql.GraphQLModule",
  "com.yangdb.fuse.dispatcher.query.rdf.SparqlModule",
"com.yangdb.fuse.dispatcher.query.sql.SqlModule",
  "com.yangdb.fuse.dispatcher.modules.DescriptorsModule",
  "com.yangdb.fuse.asg.translator.graphql.AsgGraphQLModule",
  "com.yangdb.fuse.asg.translator.cypher.AsgCypherModule",
  "com.yangdb.fuse.asg.translator.sparql.AsgSparqlModule",
  "com.yangdb.fuse.asg.M2AsgModule",
  "com.yangdb.fuse.epb.plan.modules.EpbDfsCountBasedRedundantModule",
  "com.yangdb.fuse.asg.AsgValidationModule",
  "com.yangdb.fuse.gta.module.GtaModule",
  "com.yangdb.fuse.executor.ExecutorModule",
  "com.yangdb.fuse.executor.modules.discrete.CursorsModule",
  "com.yangdb.dragons.DragonsModule"
]

epb.cost.alpha = 1
epb.cost.delta = 1

opensearch.embedded = false
opensearch.delete_data_on_load = false
opensearch.hosts = [ "opensearch" ]
opensearch.port = 9300
opensearch.cluster_name = Dragons
opensearch.default_search_size = 10000000
opensearch.max_search_size = 1000000000
opensearch.scroll_size = 10000
opensearch.scroll_time = 600000

opensearch.cluster.routing.allocation.disk.watermark.low = 10gb
opensearch.cluster.routing.allocation.disk.watermark.high = 5gb
opensearch.cluster.routing.allocation.disk.watermark.flood_stage = 1gb
opensearch.cluster.info.update.interval = 10s

unipop.bulk.max = 1000
unipop.bulk.start = 1000
unipop.bulk.multiplier = 1

assembly = Dragons
Dragons.stats_provider_class = com.yangdb.fuse.epb.plan.statistics.NoStatsProvider

Dragons.physical_schema_initiator = com.yangdb.fuse.executor.ontology.schema.load.DefaultGraphInitiator
Dragons.physical_schema_data_loader = com.yangdb.fuse.executor.ontology.schema.load.IndexProviderBasedGraphLoader
Dragons.physical_schema_csv_data_loader = com.yangdb.fuse.executor.ontology.schema.load.IndexProviderBasedCSVLoader

Dragons.plan_extension_strategy_class = com.yangdb.fuse.epb.plan.extenders.M1.M1DfsRedundantPlanExtensionStrategy
Dragons.physical_schema_provider_factory_class = com.yangdb.fuse.executor.ontology.schema.GraphElementSchemaProviderJsonFactory
Dragons.asg_strategy_registrar = com.yangdb.fuse.asg.strategy.M2AsgStrategyRegistrar
Dragons.physical_raw_schema = com.yangdb.fuse.executor.ontology.schema.IndexProviderRawSchema
Dragons.search_order_provider= com.yangdb.fuse.unipop.controller.search.DefaultSearchOrderProvider
Dragons.idGenerator_indexName = .idgenerator

Dragons.unigraph_provider = com.yangdb.fuse.executor.ontology.discrete.M1ElasticUniGraphProvider
Dragons.cursor_factory = com.yangdb.fuse.executor.cursor.discrete.TraversalCursorFactory

fuse.node_status_reporter = com.yangdb.fuse.executor.resource.PersistantNodeStatusResource
fuse.plan_traversal_translator_class = com.yangdb.fuse.gta.translation.discrete.M1PlanTraversalTranslator
fuse.ontology_provider_dir = ontology
fuse.index_provider_dir = indexProvider
fuse.cursor.timeout = 1800000



