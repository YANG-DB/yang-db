# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0
version: '3.9'
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

services:
  fuse:
    image: yangdb/yang.db:Dragons
    ports:
      - 8888:8888
    environment:
      - "elasticsearchHosts=127.0.0.1"
      - "elasticsearchClusterName=${ELASTICSEARCH_CLUSTER_NAME}"
    networks:
      - network
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "discovery.zen.minimum_master_nodes=1"
      - "discovery.zen.ping.unicast.hosts=es-master"
      - "node.master=false"
      - "node.data=false"
      - "node.ingest=false"
      - "network.publish_host=127.0.0.1"
      - "cluster.name=${ELASTICSEARCH_CLUSTER_NAME}"
    networks:
      - network
    ports:
      - target: 9200
        published: 9200
        protocol: tcp
        mode: host
      - target: 9300
        published: 9300
        protocol: tcp
        mode: host
    deploy:
      endpoint_mode: dnsrr
      mode: 'global'

  es-master:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    environment:
      - "ES_JAVA_OPTS=-Xms7g -Xmx7g"
      - "discovery.zen.minimum_master_nodes=1"
      - "discovery.zen.ping.unicast.hosts=es-master"
      - "node.master=true"
      - "node.data=false"
      - "node.ingest=false"
      - "cluster.name=${ELASTICSEARCH_CLUSTER_NAME}"
    networks:
      - network
    deploy:
      endpoint_mode: dnsrr
      mode: 'replicated'
      replicas: 3
  es-data:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    environment:
      - "ES_JAVA_OPTS=-Xms13g -Xmx13g"
      - "discovery.zen.minimum_master_nodes=1"
      - "discovery.zen.ping.unicast.hosts=es-master"
      - "node.master=false"
      - "node.data=true"
      - "node.ingest=false"
      - "cluster.name=${ELASTICSEARCH_CLUSTER_NAME}"
    volumes:
      - es-fuse-data:/usr/share/elasticsearch/data
    networks:
      - network
    deploy:
      endpoint_mode: dnsrr
      mode: 'global'
  grafana:
      image: grafana/grafana
      container_name: grafana
      volumes:
        - grafana-data:/usr/share/grafana
      ports:
        - 3000:3000
      networks:
        - network
      user: "0"
volumes:
  es-fuse-data:
    driver: local
  es-fuse-master-data2:
    driver: local
  grafana-data:
    driver: local

networks:
  network:
    name: elasticsearch-graphdb-dragons-demo
    driver: overlay
    attachable: true